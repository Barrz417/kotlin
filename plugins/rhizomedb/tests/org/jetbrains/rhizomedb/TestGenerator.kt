/*
 * Copyright 2010-2023 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.rhizomedb

import org.jetbrains.kotlin.generators.generateTestGroupSuiteWithJUnit5
import org.jetbrains.rhizomedb.runners.AbstractRhizomedbAsmLikeInstructionListingTest
import org.jetbrains.rhizomedb.runners.AbstractRhizomedbBlackBoxCodegenTest
import org.jetbrains.rhizomedb.runners.AbstractRhizomedbJvmIrTextTest
import org.jetbrains.rhizomedb.runners.AbstractRhizomedbFirPsiDiagnosticTest
import java.io.File
import kotlin.io.path.createParentDirectories

/**
 * Generates test files without companion objects in "entityType/withoutCompanion"
 *
 * Original files located in "entityType/withCompanion", only files with OPTIONAL_COMPANION affected
 */
private fun generateTestFilesWithoutCompanion() {
    val roots = listOf(
        "firMembers/entityType/withCompanion",
        "codegen/entityType/withCompanion",
    ).map { File("plugins/rhizomedb/testData/$it") }

    for (root in roots) {
        for (file in root.listFiles { _, name -> name.endsWith(".kt") }.orEmpty()) {
            val originalText = file.readText()
            if (originalText.lines().all { it.trim() != OPTIONAL_COMPANION }) {
                // No optional companion objects
                continue
            }

            val target = file.parentFile.resolveSibling("withoutCompanion/${file.name}")
            target.toPath().createParentDirectories()
            target.writeText(
                comment + file.readText().replace(
                    // remove companion objects
                    "\n\\s*$OPTIONAL_COMPANION\n\\s*companion object(\n|.)*?}".toRegex(),
                    ""
                ).replace(
                    // Remove empty bodies
                    "\\s*\\{(\n|\\s)*}".toRegex(),
                    ""
                )
            )
        }
    }
}

fun main(args: Array<String>) {
    System.setProperty("java.awt.headless", "true")

    generateTestFilesWithoutCompanion()
    generateTestGroupSuiteWithJUnit5(args) {
        testGroup(
            "plugins/rhizomedb/tests-gen",
            "plugins/rhizomedb/testData"
        ) {
            // ------------------------------- diagnostics -------------------------------
            testClass<AbstractRhizomedbFirPsiDiagnosticTest> {
                model("firMembers")
            }

            // ------------------------------- asm instructions -------------------------------

            testClass<AbstractRhizomedbJvmIrTextTest> {
                model("codegen")
            }

            testClass<AbstractRhizomedbBlackBoxCodegenTest> {
                model("blackbox")
            }
        }
    }
}

private const val OPTIONAL_COMPANION = "// OPTIONAL_COMPANION"
private const val comment = "// File generated by `org.jetbrains.rhizomedb.TestGeneratorKt`. DO NOT MODIFY MANUALLY\n"