FILE: enumClass.kt
    @R|com/jetbrains/rhizomedb/GeneratedEntityType|() public final enum class MyEntity : R|com/jetbrains/rhizomedb/Entity|, R|kotlin/Enum<MyEntity>| {
        private constructor(eid: R|com/jetbrains/rhizomedb/EID|): R|MyEntity| {
            super<R|kotlin/Enum<MyEntity>|>()
        }

        public open override val eid: R|com/jetbrains/rhizomedb/EID| = R|<local>/eid|
            public get(): R|com/jetbrains/rhizomedb/EID|

        @R|com/jetbrains/rhizomedb/GeneratedEntityType|() public final static enum entry A: R|MyEntity| = object : R|MyEntity| {
            private constructor(): R|<anonymous>| {
                super<R|MyEntity|>(Int(0))
            }

        }

        public final static enum entry B: R|MyEntity| = object : R|MyEntity| {
            private constructor(): R|<anonymous>| {
                super<R|MyEntity|>(Int(1))
            }

        }

        public final companion object Companion : R|kotlin/Any| {
            private constructor(): R|MyEntity.Companion| {
                super<R|kotlin/Any|>()
            }

            public final val X: R|kotlin/Int| = Int(42)
                public get(): R|kotlin/Int|

        }

        public final static fun values(): R|kotlin/Array<MyEntity>| {
        }

        public final static fun valueOf(value: R|kotlin/String|): R|MyEntity| {
        }

        public final static val entries: R|kotlin/enums/EnumEntries<MyEntity>|
            public get(): R|kotlin/enums/EnumEntries<MyEntity>|

    }
    public final fun foo(): R|kotlin/Unit| {
        Q|MyEntity|.<Ambiguity: all, [com/jetbrains/rhizomedb/all, com/jetbrains/rhizomedb/all, com/jetbrains/rhizomedb/all, com/jetbrains/rhizomedb/all]>#()
        Q|MyEntity|.<Ambiguity: single, [com/jetbrains/rhizomedb/single, com/jetbrains/rhizomedb/single]>#()
        Q|MyEntity|.<Ambiguity: singleOrNull, [com/jetbrains/rhizomedb/singleOrNull, com/jetbrains/rhizomedb/singleOrNull]>#()
    }
