package test

class MyEntity : Entity {
  override val eid: Int
    field = eid
    override get

  @ValueAttribute(flags = Indexing.UNIQUE)
  val str: String /* by */
    field = Companion.<get-strAttr>()
    get(): String {
      return <this>.#str$delegate.getValue(entity = <this>, property = MyEntity::str)
    }

  companion object Companion : EntityType<MyEntity> {
    val strAttr: Required<String, MyEntity>
      field = Companion.requiredValue<String>(name = "strAttr", serializer = Companion.serializer(), valueFlags = Indexing.UNIQUE, defaultValueProvider = null)
      get

    private constructor() /* primary */ {
      super/*EntityType*/<MyEntity>(ident = MyEntity::class, reify = MyEntity::<init>)
      /* <init>() */

    }

  }

  constructor(eid: Int) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}
