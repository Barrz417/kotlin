package test

class MyEntity : Entity {
  override val eid: Int
    field = eid
    override get

  @ValueAttribute
  val strSet: Set<String> /* by */
    field = Companion.<get-strSetAttr>()
    get(): Set<String> {
      return <this>.#strSet$delegate.getValue(entity = <this>, property = MyEntity::strSet)
    }

  companion object Companion : EntityType<MyEntity> {
    val strSetAttr: Required<Set<String>, MyEntity>
      field = Companion.requiredValue<Set<String>>(name = "strSetAttr", serializer = SetSerializer</* null */>(elementSerializer = Companion.serializer()), valueFlags = Indexing.NOT_INDEXED, defaultValueProvider = null)
      get

    private constructor() /* primary */ {
      super/*EntityType*/<MyEntity>(ident = MyEntity::class, reify = MyEntity::<init>)
      /* <init>() */

    }

  }

  constructor(eid: Int) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}
